<?php
/**
 * @file
 * Add a field to an existing form.
 */
use Drupal\Core\Form\FormStateInterface;
/**
* Implements hook_form_alter().
 * This Hook is being used to alter the site information form inside of admin panel
 * Created By : Subrata
*/
function axelerant_test_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    print $new_site_api_key = $form_state->getValue('site_api_key');
    print $site_api_key_old = $form_state->getValue('site_old_api_key');
    //print_r($form_state);
    if ($form_id == 'system_site_information_settings') {
        $site_api_key = \Drupal::config('system.site')->get('siteapikey');
        $site_api_key_var = isset($site_api_key) ? $site_api_key : 'No API Key yet';
        $site_api_key_old = isset($site_api_key) ? $site_api_key : '';
        $form['site_info_api_key'] = [
            '#type' => 'details',
            '#title' => t('API Key'),
            '#open' => TRUE,
        ];
        $form['site_info_api_key']['site_api_key'] = [
            '#type' => 'textfield',
            '#title' => t('Site API Key'),
            '#description' => t("This field is added to put site API key."),
            '#default_value' => $site_api_key_var,
            '#size' => 40,
        ];
        $form['site_info_api_key']['site_old_api_key'] = [
            '#type' => 'hidden',
            '#default_value' => $site_api_key_old,
        ];
        // Change text of submit button by Update Configuration
        $form['actions']['submit']['#value'] = t('Update Configuration');
        // Custom submit function.
        $form['actions']['submit']['#submit'][] = 'axelerant_test_site_info_fprm_submit';
        return $form;
    }
}

// Form submit handler

function axelerant_test_site_info_fprm_submit($form, FormStateInterface $form_state) {
    $new_site_api_key = $form_state->getValue('site_api_key');
    $site_api_key_old = $form_state->getValue('site_old_api_key');
    $api_val_true = $new_site_api_key && $new_site_api_key != 'No API Key yet' && $site_api_key_old != $new_site_api_key;
    $var_obj = \Drupal::configFactory()->getEditable('system.site');
    if ($api_val_true)
        $var_obj->set('siteapikey', $new_site_api_key);
    $var_obj->set('name', $form_state->getValue('site_name'))
        ->set('mail', $form_state->getValue('site_mail'))
        ->set('slogan', $form_state->getValue('site_slogan'))
        ->set('page.front', $form_state->getValue('site_frontpage'))
        ->set('page.403', $form_state->getValue('site_403'))
        ->set('page.404', $form_state->getValue('site_404'))
        ->save();
    if ($api_val_true)
        drupal_set_message(t('Site API Key ( %site_api_key ) has been saved.', array('%site_api_key' => $new_site_api_key)), 'status', TRUE);
    else
        drupal_set_message(t('Except site API key all configuration options have been saved.'));
}